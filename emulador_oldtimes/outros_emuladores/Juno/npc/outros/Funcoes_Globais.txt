//===== Cronus Script ======================================= 
//= Global Functions
//===== Por: ================================================== 
//= Lupus, kobra_k88
//===== Versão: ===================================== 
//= 1.4
//============================================================ 


//=========================================
// Function that clears job quest variables
//=========================================
function	script	F_ClearJobVar	{
	// Treinamento -------------------------
	set Tr_naoaceitoclass,0; //Apagar variavel do treinamento (Não Remova)
	// Misc ---------------------------------
	set JBLVL,0;
	// First Class Jobs ---------------------
	set job_acolyte_q,0; set job_acolyte_q2,0;
	set job_archer_q,0;
	set job_magician_q,0;
	set job_merchant_q,0; set job_merchant_q2,0; set job_merchant_q3,0;
	set job_sword_q,0; set job_sword_q2,0; set SWTEST, 0;
	set job_thief_q,0;
	// Super Novice
	set SUPNOV_Q,0;
	// 2-1 Jobs ------------------------------
	set ASSIN_Q,0; set ASSIN_Q2,0;
	set BSMITH_Q,0; set BSMITH_Q2,0;
	set HNTR_Q,0; set HNTR_Q2,0;
	set KNIGHT_Q,0; set KNIGHT_Q2,0;
	set PRIEST_Q,0; set PRIEST_Q2,0; set PRIEST_Q3,0;
	set WIZ_Q,0; set WIZ_Q2,0;
	// 2-2 Jobs ------------------------------
	set ROGUE_Q,0; set ROGUE_Q2,0;
	set ALCH_Q,0; set ALCH_Q2,0;
	set CRUS_Q,0;
	set MONK_Q,0;
	set SAGE_Q,0; set SAGE_Q2,0;
	set DANC_Q,0;
	return;
}

//=====================================================
// Class = Internal Class ID
// BaseJob = Base Job (0..23)
// Upper : 0 - Default, 1 - Advanced, 2 - Baby

function	script	Job_Change	{
	if (Upper==0) setjob getarg(0); //Change Job For Common
	if (Upper==2) setjob getarg(0)+46; //Change Job For Baby Class
	return;
}

//=====================================================
// Functions used to check a players job class
//----------------------------------------------------
// HOW TO USE:
// i.e. We need all holy classes but monks
// if ( callfunc("Is_Holy_Class") && callfunc("Is_Monk")==0 ) goto L_Start;
//=======================================================

//------------------------------------------------------
// returns 1 if the player is either Aco,Monk,Priest,Aco High,High Priest,
// Champion, 0 otherwise
function	script	Is_Holy_Class	{
	return ( BaseJob==Job_Acolyte || BaseJob==Job_Priest || BaseJob==Job_Monk );
}
//------------------------------------------------------
// returns 1 if the player is either Archer,Hunter,Bard,Dancer,Archer High,Sniper,
// Clown,Gypsy, 0 otherwise
function	script	Is_Bow_Class	{
	return ( Class==4004 || BaseJob==Job_Hunter || BaseJob==Job_Bard || BaseJob==Job_Dancer );
}
//------------------------------------------------------
// returns 1 if the player is either Mage,Wizard,Sage,Mage High,High Wizard,
// Professor, 0 otherwise
function	script	Is_Magic_Class	{
	return ( BaseJob==Job_Mage || BaseJob==Job_Wizard || BaseJob==Job_Sage );
}
//----------------------------------------------------
// returns 1 if the player is either Merc,Blacksmith,Alchemist,Merc High,
// Whitesmith,Creator, 0 otherwise
function	script	Is_Merc_Class	{
	return ( BaseJob==Job_Merchant || BaseJob==Job_Blacksmith || BaseJob==Job_Alchem );
}
//------------------------------------------------------
// returns 1 if the player is either Thief,Assassin,Rogue,Thief High, Assassin Cross
// Stalker, 0 otherwise
function	script	Is_Thief_Class	{
	return ( BaseJob==Job_Thief || BaseJob==Job_Assassin || BaseJob==Job_Rogue );
}
//-----------------------------------------------------
// returns 1 if the player is either Swordy,Knight,Crusader,Swordy High,
// Lord Knight,Paladin, 0 otherwise
function	script	Is_Sword_Class	{
	return ( BaseJob==Job_Swordman || BaseJob==Job_Knight || BaseJob==Job_Knight2 || BaseJob==Job_Crusader || BaseJob==Job_Crusader2 );
}
//-----------------------------------------------------
// returns 1 if the player is either Taekwon, Star Gladiator,Soul Linker, 0 otherwise
// these classes can't be adopted nor reborn ()
function	script	Is_Taekwon_Class	{
	return ( Class==Job_Taekwon || Class==Job_Star_Gladiator || Class==Job_Soul_Linker );
}

//////////////////////////////////////////////////////////////////////////////////
// *** Function "F_SaveQuestSkills": Store learnt quest skills 
//////////////////////////////////////////////////////////////////////////////////
function	script	F_SaveQuestSkills	{
	set ADV_QSK,0; set ADV_QSK2,0;
	//1st classes quest skills
	for(set @i, 0; @i < 14; set @i, @i + 1){
		if(getskilllv(144+@i)) set ADV_QSK,ADV_QSK|pow(2,@i);
	}
	//2nd classes quest skills
	for(set @i, 0; @i < 19; set @i, @i + 1){
		if(getskilllv(1001+@i)) set ADV_QSK2,ADV_QSK2|pow(2,@i);
	}
	return;
}

//////////////////////////////////////////////////////////////////////////////////
// *** Function "F_Load1Skills": Restore learnt 1st class quest skills
//////////////////////////////////////////////////////////////////////////////////
function	script	F_Load1Skills	{
	//1st classes quest skills
	for(set @i, 0; @i < 14; set @i, @i + 1){
		if(ADV_QSK|pow(2,@i) == ADV_QSK) skill 144+@i,1,0;
	}
	set ADV_QSK,0; //Clear var
	return;
}

//////////////////////////////////////////////////////////////////////////////////
// *** Function "F_Load2Skills": Restore learnt 2nd class quest skills
//////////////////////////////////////////////////////////////////////////////////
function	script	F_Load2Skills	{
	//2nd classes quest skills
	for(set @i, 0; @i < 19; set @i, @i + 1){
		if(ADV_QSK2|pow(2,@i) == ADV_QSK2) skill 1001+@i,1,0;
	}
	set ADV_QSK2,0; //Clear var
	return;
}